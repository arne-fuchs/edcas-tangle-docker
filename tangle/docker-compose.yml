#
# node-docker-setup __VERSION__
# https://github.com/iotaledger/node-docker-setup
#

version: '3.9'
services:

  ##################################################################
  #  HORNET - Stardust                                             #
  ##################################################################

  hornet:
    container_name: hornet
    image: iotaledger/hornet:2.0-rc
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    stop_grace_period: 5m
    depends_on:
      traefik:
        condition: service_started
    ports:
      - "15600:15600/tcp"
      - "14626:14626/udp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hornet.service=hornet"
      - "traefik.http.routers.hornet.rule=Host(`${NODE_HOST:-localhost}`)"
      - "traefik.http.routers.hornet.entrypoints=web"
      - "traefik.http.services.hornet.loadbalancer.server.port=14265"
      - "traefik.http.routers.hornet.middlewares=redirect-dashboard"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.regex=^(https?://[^/]+)/?$$"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.replacement=$$1/dashboard/"
      - "traefik.http.middlewares.redirect-dashboard.redirectregex.permanent=true"

    cap_drop:
      - ALL
    volumes:
      - ./${HORNET_CONFIG_FILE:-config.json}:/app/config.json:ro
      - ./peering.json:/app/peering.json
      - ./public:/public/data
    command:
      - "-c"
      - "config.json"
      - "--db.path=data/database"
      - "--p2p.db.path=data/p2pstore"
      - "--p2p.bindMultiAddresses=/ip4/0.0.0.0/tcp/15600,/ip6/::/tcp/15600"
      - "--snapshots.fullPath=data/snapshots/full_snapshot.bin"
      - "--snapshots.deltaPath=data/snapshots/delta_snapshot.bin"
      - "--inx.enabled=true"
      - "--inx.bindAddress=hornet:9029"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=hornet:9311"

  ##################################################################
  #  Reverse Proxy and SSL                                         #
  ##################################################################

  traefik:
    container_name: traefik
    image: traefik:v2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--metrics.prometheus=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "${HTTP_PORT:-80}:80/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"

  ##################################################################
  #  Monitoring                                                    #
  ##################################################################

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    user: "65532"
    volumes:
      - ./data/prometheus/:/prometheus
      - ./assets/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/localtime:/etc/localtime:ro
    profiles:
      - monitoring

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    command:
      - --housekeeping_interval=30s    # kubernetes default args
      - --max_housekeeping_interval=35s
      - --event_storage_event_limit=default=0
      - --event_storage_age_limit=default=0
      - --store_container_labels=false
      - --global_housekeeping_interval=30s
      - --event_storage_event_limit=default=0
      - --event_storage_age_limit=default=0
      - --disable_metrics=accelerator,advtcp,cpu_topology,disk,hugetlb,memory_numa,percpu,referenced_memory,resctrl,sched,tcp,udp
      - --enable_load_reader=true
      - --docker_only=true          # only show stats for docker containers
      - --allow_dynamic_housekeeping=true
      - --storage_duration=1m0s
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    profiles:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "65532"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/grafana`) || PathPrefix(`/grafana/`))"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SERVER_ROOT_URL=/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=${NODE_HOST:-localhost}
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/node_dashboard.json
    volumes:
      - ./public/grafana:/var/lib/grafana
      - ./assets/grafana/:/etc/grafana/provisioning/
    profiles:
      - monitoring

  ##################################################################
  #  INX Extensions                                                #
  #  disable them out by commenting out the services               #
  ##################################################################

  inx-indexer:
    container_name: inx-indexer
    image: iotaledger/inx-indexer:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
    volumes:
      - ./public:/public/database
    command:
      - "--inx.address=hornet:9029"
      - "--indexer.db.sqlite.path=database/indexer"
      - "--restAPI.bindAddress=inx-indexer:9091"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=inx-indexer:9312"

  inx-mqtt:
    container_name: inx-mqtt
    image: iotaledger/inx-mqtt:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
    command:
      - "--inx.address=hornet:9029"
      - "--mqtt.websocket.bindAddress=inx-mqtt:1888"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=inx-mqtt:9312"

  inx-participation:
    container_name: inx-participation
    image: iotaledger/inx-participation:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    volumes:
      - ./public:/public/database
    command:
      - "--inx.address=hornet:9029"
      - "--participation.db.path=database/participation"
      - "--restAPI.bindAddress=inx-participation:9892"

  inx-spammer:
    container_name: inx-spammer
    image: iotaledger/inx-spammer:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
      inx-indexer:
        condition: service_started
    command:
      - "--inx.address=hornet:9029"
      - "--restAPI.bindAddress=inx-spammer:9092"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=inx-spammer:9312"

  inx-poi:
    container_name: inx-poi
    image: iotaledger/inx-poi:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
    command:
      - "--inx.address=hornet:9029"
      - "--restAPI.bindAddress=inx-poi:9687"

  inx-dashboard:
    container_name: inx-dashboard
    image: iotaledger/inx-dashboard:1.0-rc
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      traefik:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hornet-dashboard.service=hornet-dashboard"
      - "traefik.http.routers.hornet-dashboard.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/dashboard`) || PathPrefix(`/dashboard/`))"
      - "traefik.http.routers.hornet-dashboard.entrypoints=web"
      - "traefik.http.services.hornet-dashboard.loadbalancer.server.port=8081"
    volumes:
      - ./public:/public/
    command:
      - "--inx.address=hornet:9029"
      - "--dashboard.bindAddress=inx-dashboard:8081"
      - "--dashboard.auth.identityFilePath=/public/identity.key"
      - "--dashboard.auth.username=${DASHBOARD_USERNAME:-admin}"
      - "--dashboard.auth.passwordHash=${DASHBOARD_PASSWORD:-0000000000000000000000000000000000000000000000000000000000000000}"
      - "--dashboard.auth.passwordSalt=${DASHBOARD_SALT:-0000000000000000000000000000000000000000000000000000000000000000}"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=inx-dashboard:9312"

  ##################################################################
  #  WASP                                                          #
  ##################################################################

  wasp:
    container_name: wasp
    image: iotaledger/wasp:0.6-alpha
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      hornet:
        condition: service_healthy
      inx-indexer:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wasp-api.service=wasp-api"
      - "traefik.http.routers.wasp-api.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/wasp/api`) || PathPrefix(`/wasp/api/`))"
      - "traefik.http.routers.wasp-api.entrypoints=web"
      - "traefik.http.services.wasp-api.loadbalancer.server.port=9090"
      - "traefik.http.routers.wasp-api.middlewares=rewrite-wasp-api"
      - "traefik.http.middlewares.rewrite-wasp-api.stripprefix.prefixes=/wasp/api"
    ports:
      - "4000:4000/tcp" # Peering
    volumes:
      - ./public/wasp:/public/waspdb
    command:
      - "--logger.level=debug"
      - "--inx.address=hornet:9029"
      - "--db.chainState.path=/app/waspdb/chains/data"
      - "--p2p.identity.filePath=/app/waspdb/identity/identity.key"
      - "--p2p.db.path=/app/waspdb/p2pstore"
      - "--registries.chains.filePath=/app/waspdb/chains/chain_registry.json"
      - "--registries.dkShares.path=/app/waspdb/dkshares"
      - "--registries.trustedPeers.filePath=/app/waspdb/trusted_peers.json"
      - "--registries.consensusState.path=/app/waspdb/chains/consensus"
      - "--wal.path=/app/waspdb/wal"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=wasp:9312"
    profiles:
      - wasp

  wasp-dashboard:
    container_name: wasp-dashboard
    image: iotaledger/wasp-dashboard:latest
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      traefik:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wasp-dashboard.service=wasp-dashboard"
      - "traefik.http.routers.wasp-dashboard.rule=Host(`${NODE_HOST:-localhost}`) && (Path(`/wasp/dashboard`) || PathPrefix(`/wasp/dashboard/`))"
      - "traefik.http.routers.wasp-dashboard.entrypoints=web"
      - "traefik.http.services.wasp-dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.wasp-dashboard.middlewares=rewrite-wasp-dashboard"
      - "traefik.http.middlewares.rewrite-wasp-dashboard.stripprefix.prefixes=/wasp/dashboard"
    environment:
      - WASP_API_URL=http://${NODE_HOST:-localhost}/wasp/api
      - L1_API_URL=http://${NODE_HOST:-localhost}
    profiles:
      - wasp
#####################################################################
#                         EDCAS                                     #
#####################################################################
  create-snapshots:
    container_name: create-snapshots
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.11
    volumes:
      - ./protocol_parameters.json:/app/protocol_parameters.json:ro
      - ./snapshots:/app/snapshots
    command:
      - "tool"
      - "snap-gen"
      - "--protocolParametersPath=/app/protocol_parameters.json"
      - "--mintAddress=tst1qq2kvnu9pqzptkggrpqrvltvagccsh6aj2fkdhla7p3lrsy9dwhdzu5l2ye"
      - "--genesisAddresses=tst1qpszqzadsym6wpppd6z037dvlejmjuke7s24hm95s9fg9vpua7vlupxvxq2:1000000000000,tst1qqweu75ldpyann5jsthqsa6m0thx4tmqxncj6uqxf5q974pmqx30y5mcdp2:1000000000000"
      - "--outputPath=/app/snapshots/hornet-1/full_snapshot.bin"
    profiles:
      - snapshots
  bootstrap-network:
    container_name: bootstrap-network
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.11
    environment:
      - "COO_PRV_KEYS=651941eddb3e68cb1f6ef4ef5b04625dcf5c70de1fdc4b1c9eadb2c219c074e0ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c,0e324c6ff069f31890d496e9004636fd73d8e8b5bea08ec58a4178ca85462325f6752f5f46a53364e2ee9c4d662d762a81efd51010282a75cd6bd03f28ef349c"
    volumes:
      - ./config_private_tangle.json:/app/config_private_tangle.json:ro
      - ./snapshots/hornet-1:/app/snapshots
      - ./privatedb/hornet-1:/app/privatedb
      - ./privatedb/state:/app/state
    command:
      - "tool"
      - "bootstrap-private-tangle"
      - "--configFile=/app/config_private_tangle.json"
      - "--snapshotPath=/app/snapshots/full_snapshot.bin"
      - "--databasePath=/app/privatedb"
      - "--cooStatePath=/app/state/coordinator.state"
    profiles:
      - bootstrap
  #
  # Nodes
  #
  hornet-1:
    container_name: hornet-1
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.11
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    stop_grace_period: 5m
    ports:
      - "15611:15600/tcp"
      - "14265:14265/tcp"
      - "9311:9311/tcp"
      - "9011:9029/tcp"
      - "6011:6060/tcp"
    cap_drop:
      - ALL
    volumes:
      - ./config_private_tangle.json:/app/config_private_tangle.json:ro
      - ./privatedb/hornet-1:/app/privatedb
      - ./snapshots/hornet-1:/app/snapshots
    command:
      - "-c"
      - "config_private_tangle.json"
      - "--node.alias=hornet-1"
      - "--inx.enabled=true"
      - "--inx.bindAddress=172.18.211.11:9029"
      - "--p2p.identityPrivateKey=1f46fad4f538a031d4f87f490f6bca4319dfd0307636a5759a22b5e8874bd608f9156ba976a12918c16a481c38c88a7b5351b769adc30390e93b6c0a63b09b79"
      - "--p2p.peers=/ip4/172.18.211.12/tcp/15600/p2p/12D3KooWCKwcTWevoRKa2kEBputeGASvEBuDfRDSbe8t1DWugUmL,/ip4/172.18.211.13/tcp/15600/p2p/12D3KooWGdr8M5KX8KuKaXSiKfHJstdVnRkadYmupF7tFk2HrRoA,/ip4/172.18.211.14/tcp/15600/p2p/12D3KooWC7uE9w3RN4Vh1FJAZa8SbE8yMWR6wCVBajcWpyWguV73"
      - "--p2p.peerAliases=hornet-2,hornet-3,hornet-4"
      - "--debug.enabled=true"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.11:9311"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.11:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  hornet-2:
    container_name: hornet-2
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.12
    depends_on:
      hornet-1:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    stop_grace_period: 5m
    ports:
      - "14266:14265/tcp"
      - "15612:15600/tcp"
      - "9312:9311/tcp"
      - "9012:9029/tcp"
      - "6012:6060/tcp"
    cap_drop:
      - ALL
    volumes:
      - ./config_private_tangle.json:/app/config_private_tangle.json:ro
      - ./privatedb/hornet-2:/app/privatedb
      - ./snapshots/hornet-2:/app/snapshots
    command:
      - "-c"
      - "config_private_tangle.json"
      - "--node.alias=hornet-2"
      - "--inx.enabled=true"
      - "--inx.bindAddress=172.18.211.12:9029"
      - "--p2p.identityPrivateKey=a06b288ce7fc3b6f1e716f6f7d72050b53417aae4b305a68883550a3bb28597f254b082515a79391a7f13009b4133851a0c4d48e0e948809c3b46ff3e2500b4f"
      - "--p2p.peers=/ip4/172.18.211.11/tcp/15600/p2p/12D3KooWSagdVaCrS14GeJhM8CbQr41AW2PiYMgptTyAybCbQuEY,/ip4/172.18.211.13/tcp/15600/p2p/12D3KooWGdr8M5KX8KuKaXSiKfHJstdVnRkadYmupF7tFk2HrRoA,/ip4/172.18.211.14/tcp/15600/p2p/12D3KooWC7uE9w3RN4Vh1FJAZa8SbE8yMWR6wCVBajcWpyWguV73"
      - "--p2p.peerAliases=hornet-1,hornet-3,hornet-4"
      - "--debug.enabled=true"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.12:9311"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.12:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  hornet-3:
    container_name: hornet-3
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.13
    depends_on:
      hornet-1:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    stop_grace_period: 5m
    ports:
      - "14267:14265/tcp"
      - "15613:15600/tcp"
      - "9313:9311/tcp"
      - "9013:9029/tcp"
      - "6013:6060/tcp"
    cap_drop:
      - ALL
    volumes:
      - ./config_private_tangle.json:/app/config_private_tangle.json:ro
      - ./privatedb/hornet-3:/app/privatedb
      - ./snapshots/hornet-3:/app/snapshots
    command:
      - "-c"
      - "config_private_tangle.json"
      - "--node.alias=hornet-3"
      - "--inx.enabled=true"
      - "--inx.bindAddress=172.18.211.13:9029"
      - "--p2p.identityPrivateKey=5126767a84e1ced849dbbf2be809fd40f90bcfb81bd0d3309e2e25e34f803bf265500854f1f0e8fd3c389cf7b6b59cfd422b9319f257e2a8d3a772973560acdd"
      - "--p2p.peers=/ip4/172.18.211.11/tcp/15600/p2p/12D3KooWSagdVaCrS14GeJhM8CbQr41AW2PiYMgptTyAybCbQuEY,/ip4/172.18.211.12/tcp/15600/p2p/12D3KooWCKwcTWevoRKa2kEBputeGASvEBuDfRDSbe8t1DWugUmL,/ip4/172.18.211.14/tcp/15600/p2p/12D3KooWC7uE9w3RN4Vh1FJAZa8SbE8yMWR6wCVBajcWpyWguV73"
      - "--p2p.peerAliases=hornet-1,hornet-2,hornet-4"
      - "--debug.enabled=true"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.13:9311"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.13:6060"
    profiles:
      - 3-nodes
      - 4-nodes
  hornet-4:
    container_name: hornet-4
    image: iotaledger/hornet:2.0.0-rc.4
    networks:
      peering_net:
        ipv4_address: 172.18.211.14
    depends_on:
      hornet-1:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    stop_grace_period: 5m
    ports:
      - "14268:14265/tcp"
      - "15614:15600/tcp"
      - "9314:9311/tcp"
      - "9014:9029/tcp"
      - "6014:6060/tcp"
    cap_drop:
      - ALL
    volumes:
      - ./config_private_tangle.json:/app/config_private_tangle.json:ro
      - ./privatedb/hornet-4:/app/privatedb
      - ./snapshots/hornet-4:/app/snapshots
    command:
      - "-c"
      - "config_private_tangle.json"
      - "--node.alias=hornet-4"
      - "--inx.enabled=true"
      - "--inx.bindAddress=172.18.211.14:9029"
      - "--p2p.identityPrivateKey=996dceaeddcb5fc21480646f38ac53c4f5668fd33f3c0bfecfd004861d4a9dc722355dabd7f31a1266423abcf6c1db6228eb8283deb55731915ed06bd2ca387e"
      - "--p2p.peers=/ip4/172.18.211.11/tcp/15600/p2p/12D3KooWSagdVaCrS14GeJhM8CbQr41AW2PiYMgptTyAybCbQuEY,/ip4/172.18.211.12/tcp/15600/p2p/12D3KooWCKwcTWevoRKa2kEBputeGASvEBuDfRDSbe8t1DWugUmL,/ip4/172.18.211.13/tcp/15600/p2p/12D3KooWGdr8M5KX8KuKaXSiKfHJstdVnRkadYmupF7tFk2HrRoA"
      - "--p2p.peerAliases=hornet-1,hornet-2,hornet-3"
      - "--debug.enabled=true"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.14:9311"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.14:6060"
    profiles:
      - 4-nodes
  #
  # INX
  #
  edcas-inx-coordinator:
    container_name: edcas-inx-coordinator
    image: iotaledger/inx-coordinator:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.21
    depends_on:
      hornet-1:
        condition: service_healthy
    environment:
      - "COO_PRV_KEYS=651941eddb3e68cb1f6ef4ef5b04625dcf5c70de1fdc4b1c9eadb2c219c074e0ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c,0e324c6ff069f31890d496e9004636fd73d8e8b5bea08ec58a4178ca85462325f6752f5f46a53364e2ee9c4d662d762a81efd51010282a75cd6bd03f28ef349c"
    ports:
      - "6021:6060/tcp"
    volumes:
      - ./privatedb/state:/app/state
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--coordinator.stateFilePath=state/coordinator.state"
      - "--coordinator.blockBackups.enabled=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.21:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-indexer:
    container_name: edcas-inx-indexer
    image: iotaledger/inx-indexer:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.22
    depends_on:
      hornet-1:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9322:9311/tcp"
      - "6022:6060/tcp"
    volumes:
      - ./privatedb/indexer:/app/database
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--restAPI.bindAddress=172.18.211.22:9091"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.22:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.restAPIMetrics=true"
      - "--prometheus.inxMetrics=true"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.22:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-mqtt:
    container_name: edcas-inx-mqtt
    image: iotaledger/inx-mqtt:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.23
    depends_on:
      hornet-1:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9323:9311/tcp"
      - "6023:6060/tcp"
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--mqtt.websocket.bindAddress=172.18.211.23:1888"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.23:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.mqttMetrics=true"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.23:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-faucet:
    container_name: edcas-inx-faucet
    image: iotaledger/inx-faucet:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.24
    depends_on:
      hornet-1:
        condition: service_healthy
      edcas-inx-indexer:
        condition: service_started
    restart: on-failure
    ports:
      - "8091:8091/tcp"
      - "6024:6060/tcp"
    environment:
      - "FAUCET_PRV_KEY=887844b1e6bf9ca9e0b57584656add4370dbb49a8cb79e2e3032229f30fd80359e3df559ad0de8e5fa019b9ea46d1ee40879f3f3f74594a3306de9dfd43dcd25"
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--faucet.bindAddress=172.18.211.24:8091"
      - "--faucet.amount=1000000000000"
      - "--faucet.smallAmount=100000000000"
      - "--faucet.maxAddressBalance=2000000000000"
      - "--faucet.rateLimit.enabled=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.24:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-participation:
    container_name: edcas-inx-participation
    image: iotaledger/inx-participation:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.25
    depends_on:
      hornet-1:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9892:9892/tcp"
      - "6025:6060/tcp"
    volumes:
      - ./privatedb/participation:/app/database
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--restAPI.bindAddress=172.18.211.25:9892"
      - "--participation.db.path=/app/database"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.25:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-spammer:
    container_name: edcas-inx-spammer
    image: iotaledger/inx-spammer:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.26
    depends_on:
      hornet-1:
        condition: service_healthy
      edcas-inx-indexer:
        condition: service_started
    restart: on-failure
    ports:
      - "9326:9311/tcp"
      - "9092:9092/tcp"
      - "6026:6060/tcp"
    environment:
      - "SPAMMER_MNEMONIC=reward addict anger tongue denial supply cattle lawn foot climb ask friend base spring ensure spike alien equal burst bitter crowd august ignore animal"
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--restAPI.bindAddress=172.18.211.26:9092"
      - "--spammer.autostart=false"
      - "--spammer.bpsRateLimit=50"
      - "--spammer.cpuMaxUsage=0.0"
      - "--spammer.workers=0"
      - "--spammer.valueSpam.enabled=true"
      - "--spammer.valueSpam.sendBasicOutput=true"
      - "--spammer.valueSpam.collectBasicOutput=true"
      - "--spammer.valueSpam.createAlias=true"
      - "--spammer.valueSpam.destroyAlias=true"
      - "--spammer.valueSpam.createFoundry=true"
      - "--spammer.valueSpam.destroyFoundry=true"
      - "--spammer.valueSpam.mintNativeToken=true"
      - "--spammer.valueSpam.meltNativeToken=true"
      - "--spammer.valueSpam.createNFT=true"
      - "--spammer.valueSpam.destroyNFT=true"
      - "--prometheus.enabled=true"
      - "--prometheus.bindAddress=172.18.211.26:9311"
      - "--prometheus.spammerMetrics=true"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.26:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-poi:
    container_name: edcas-inx-poi
    image: iotaledger/inx-poi:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.27
    depends_on:
      hornet-1:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9687:9687/tcp"
      - "6027:6060/tcp"
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--restAPI.bindAddress=172.18.211.27:9687"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.27:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-dashboard-1:
    container_name: edcas-inx-dashboard-1
    image: iotaledger/inx-dashboard:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.31
    depends_on:
      hornet-1:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9331:9311/tcp"
      - "8011:8081/tcp"
      - "6031:6060/tcp"
    command:
      - "--inx.address=172.18.211.11:9029"
      - "--dashboard.bindAddress=172.18.211.31:8081"
      - "--dashboard.auth.passwordHash=577eb97f8faf2af47ff957b00827d6bfe9d05b810981e3073dc42553505282c1"
      - "--dashboard.auth.passwordSalt=e5d8d0bd3bb9723236177b4713a11580c55b69a51e7055dd11fa1dad3b8f6d6c"
      - "--dashboard.auth.identityPrivateKey=1f46fad4f538a031d4f87f490f6bca4319dfd0307636a5759a22b5e8874bd608f9156ba976a12918c16a481c38c88a7b5351b769adc30390e93b6c0a63b09b79"
      - "--prometheus.enabled=false"
      - "--prometheus.bindAddress=172.18.211.31:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.31:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-dashboard-2:
    container_name: edcas-inx-dashboard-2
    image: iotaledger/inx-dashboard:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.32
    depends_on:
      hornet-2:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9332:9311/tcp"
      - "8012:8081/tcp"
      - "6032:6060/tcp"
    command:
      - "--inx.address=172.18.211.12:9029"
      - "--dashboard.bindAddress=172.18.211.32:8081"
      - "--dashboard.auth.passwordHash=577eb97f8faf2af47ff957b00827d6bfe9d05b810981e3073dc42553505282c1"
      - "--dashboard.auth.passwordSalt=e5d8d0bd3bb9723236177b4713a11580c55b69a51e7055dd11fa1dad3b8f6d6c"
      - "--dashboard.auth.identityPrivateKey=a06b288ce7fc3b6f1e716f6f7d72050b53417aae4b305a68883550a3bb28597f254b082515a79391a7f13009b4133851a0c4d48e0e948809c3b46ff3e2500b4f"
      - "--prometheus.enabled=false"
      - "--prometheus.bindAddress=172.18.211.32:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.32:6060"
    profiles:
      - 2-nodes
      - 3-nodes
      - 4-nodes
  edcas-inx-dashboard-3:
    container_name: edcas-inx-dashboard-3
    image: iotaledger/inx-dashboard:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.33
    depends_on:
      hornet-3:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9333:9311/tcp"
      - "8013:8081/tcp"
      - "6033:6060/tcp"
    command:
      - "--inx.address=172.18.211.13:9029"
      - "--dashboard.bindAddress=172.18.211.33:8081"
      - "--dashboard.auth.passwordHash=577eb97f8faf2af47ff957b00827d6bfe9d05b810981e3073dc42553505282c1"
      - "--dashboard.auth.passwordSalt=e5d8d0bd3bb9723236177b4713a11580c55b69a51e7055dd11fa1dad3b8f6d6c"
      - "--dashboard.auth.identityPrivateKey=5126767a84e1ced849dbbf2be809fd40f90bcfb81bd0d3309e2e25e34f803bf265500854f1f0e8fd3c389cf7b6b59cfd422b9319f257e2a8d3a772973560acdd"
      - "--prometheus.enabled=false"
      - "--prometheus.bindAddress=172.18.211.33:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.33:6060"
    profiles:
      - 3-nodes
      - 4-nodes
  edcas-inx-dashboard-4:
    container_name: edcas-inx-dashboard-4
    image: iotaledger/inx-dashboard:1.0-rc
    networks:
      peering_net:
        ipv4_address: 172.18.211.34
    depends_on:
      hornet-4:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9334:9311/tcp"
      - "8014:8081/tcp"
      - "6034:6060/tcp"
    command:
      - "--inx.address=172.18.211.14:9029"
      - "--dashboard.bindAddress=172.18.211.34:8081"
      - "--dashboard.auth.passwordHash=577eb97f8faf2af47ff957b00827d6bfe9d05b810981e3073dc42553505282c1"
      - "--dashboard.auth.passwordSalt=e5d8d0bd3bb9723236177b4713a11580c55b69a51e7055dd11fa1dad3b8f6d6c"
      - "--dashboard.auth.identityPrivateKey=996dceaeddcb5fc21480646f38ac53c4f5668fd33f3c0bfecfd004861d4a9dc722355dabd7f31a1266423abcf6c1db6228eb8283deb55731915ed06bd2ca387e"
      - "--prometheus.enabled=false"
      - "--prometheus.bindAddress=172.18.211.34:9311"
      - "--prometheus.goMetrics=false"
      - "--prometheus.processMetrics=false"
      - "--prometheus.promhttpMetrics=false"
      - "--profiling.enabled=true"
      - "--profiling.bindAddress=172.18.211.34:6060"
    profiles:
      - 4-nodes
networks:
  peering_net:
    ipam:
      driver: default
      config:
        - subnet: "172.18.211.0/24"